#!/usr/bin/env python3
"""
Script d'initialisation de la base de donn√©es
Cr√©e l'utilisateur administrateur par d√©faut si n√©cessaire
"""
import sys
import logging
from pathlib import Path

# Ajout du r√©pertoire parent au chemin pour les imports
sys.path.append(str(Path(__file__).parent.parent))

from app.core.config import settings
from app.db.session import SessionLocal
from app.models.user import User
from app.core.security import get_password_hash, verify_password

# Configuration du logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def init_db() -> None:
    """Initialise la base de donn√©es avec l'utilisateur admin par d√©faut"""
    db = SessionLocal()
    
    try:
        # V√©rifier si l'utilisateur admin existe d√©j√†
        admin = db.query(User).filter(User.username == "admin").first()
        
        if not admin:
            # Cr√©er l'utilisateur admin par d√©faut
            admin_user = User(
                username="admin",
                email="admin@example.com",
                hashed_password=get_password_hash("admin"),
                is_active=True,
                is_superuser=True,
                full_name="Administrateur"
            )
            db.add(admin_user)
            db.commit()
            logger.info("Utilisateur admin cr√©√© avec succ√®s")
            print("\033[92m‚úì Compte administrateur cr√©√© avec succ√®s!\033[0m")
            print("\033[93m‚ö†Ô∏è  IMPORTANT: Veuillez changer le mot de passe apr√®s votre premi√®re connexion!\033[0m")
            print("\033[94müîë Identifiants par d√©faut:")
            print("   - Utilisateur: admin")
            print("   - Mot de passe: admin\033[0m")
        else:
            logger.info("L'utilisateur admin existe d√©j√†")
            print("\033[93m‚ÑπÔ∏è  L'utilisateur admin existe d√©j√† dans la base de donn√©es\033[0m")
    
    except Exception as e:
        logger.error(f"Erreur lors de l'initialisation de la base de donn√©es: {e}")
        print(f"\033[91m‚úó Erreur lors de l'initialisation de la base de donn√©es: {e}\033[0m")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("\033[1m=== Initialisation de la base de donn√©es ===\033[0m")
    init_db()
